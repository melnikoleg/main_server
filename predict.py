# -*- coding: utf-8 -*-


import numpy as np
import scipy.sparse as sp
from bson import ObjectId
from pymongo import MongoClient
from keras.preprocessing import image
from sklearn.neighbors import NearestNeighbors
from keras.applications.mobilenetv2 import MobileNetV2
from keras.applications.mobilenetv2 import preprocess_input
from collections import Counter

a = [[1.2338101, 0.031671017, 0, 0.22642471, 0, 0.7118729, 0.0106857065, 0.11972735, 0.24929725, 0, 0, 0.13205272, 0,
      0.0025719623, 0.10581312, 0.6848018, 0, 0.9541816, 0, 1.1924623, 0.07606727, 1.3052094, 0.038885564, 0.3075352,
      1.148489, 0.016516471, 0.97097826, 3.2529886, 0.45585904, 0.440103, 0, 0.040003564, 0.09014858, 0, 0.7376759,
      0.05641403, 0.18451606, 0.19221364, 1.6776907, 0, 2.431684, 0, 0.49825594, 0.04244168, 0.03544857, 0.2199723,
      0.6073277, 0, 0, 0.21279067, 1.277549, 0.01746167, 0, 0.012118311, 0, 0.3924444, 0.4743197, 0.019967819,
      0.07247109, 0.006527239, 0.05710626, 0.013394006, 0.51152056, 0.056710303, 0.20872751, 0, 0.012093262, 0,
      0.29926124, 1.1429927, 0.013213644, 0.037558615, 0.12510724, 0.26565206, 0, 0.3735746, 0.006978093, 0.02286111,
      0.73846835, 0, 0.24850343, 0.87366235, 0.3933357, 1.4580308, 0.038600367, 0.8542241, 0.058473863, 0, 0.043425977,
      0.24000147, 0.022887658, 0.89379454, 0.24418257, 0, 0.19703694, 0.17450008, 0.009746133, 0.0035352998, 0.38835636,
      1.2756263, 1.0294985, 0.04993102, 0.009590042, 0.34816816, 0, 0.063446835, 0.4796061, 0.7104431, 1.5960687,
      1.8352259, 1.2167009, 0.25981116, 0.024851955, 0.012179891, 0.2762175, 1.8551393, 0.2181205, 0.3549221,
      0.026154216, 0.029719664, 0.11614074, 0.010395196, 0, 0, 0.009771483, 0, 0, 1.3011804, 0.10939394, 0.09214918,
      2.3277884, 0.9241907, 0.27695844, 0.36606342, 0, 0.63139224, 0.002109946, 1.3131438, 0.11124567, 0.30953118, 0,
      2.7354448, 1.138362, 0, 0, 2.4596858, 0.7018847, 0.38812816, 0.1480087, 0.08553493, 0.32433903, 0.098378494,
      0.054707244, 0, 0.12580578, 0, 0.30354697, 0.037001513, 0.0052862363, 0.087288305, 1.158587, 0.021572571, 0,
      1.471145, 0.52485496, 0.78730136, 0.032427672, 0.27589166, 0.035021722, 0.4721424, 0, 0.11832197, 0.84364414, 0,
      0.32018408, 0, 0.3861057, 1.1851826, 0.34694812, 0, 0.3341854, 0.3948531, 0.05051258, 0, 0.046704136, 0.085449874,
      0.03525084, 0.092749685, 0.19805211, 0, 0.22464195, 0.500621, 0, 0.050620567, 0.016327975, 0, 0.07501418, 0, 0, 0,
      0.0010025939, 0.33464918, 0.011094745, 0, 0.08635411, 0.0067111715, 0, 0.036831994, 0.05844021, 0.31023055,
      0.045884725, 0.14175738, 0, 0.22174142, 1.4582999, 0.4442637, 0.018501457, 0.16587968, 0.0021314912, 0.08071556,
      1.6918986, 0, 0.5611766, 0.7469401, 0, 0.4156657, 0, 0, 0, 0.48175415, 0.52437013, 0, 0, 0, 0, 0, 0.20549914,
      0.13858682, 0, 0, 0.23967871, 0.52520853, 0, 1.2400813, 0, 0, 1.3822615, 0.52815247, 0.7148316, 0.1847787,
      1.3120574, 0.07459387, 0.030984508, 0.30682907, 0, 0.07874105, 2.2825468, 0.023417551, 0.6630725, 0.3268608, 0,
      1.0820136, 0, 0.61632997, 0, 0, 0, 0.3495432, 0.21627988, 0.0042130705, 0.018738484, 1.1510526, 0.13666081, 0,
      1.126667, 0.58053786, 0, 0.3490171, 0, 0.39721328, 0.037890814, 1.0869379, 0, 1.4734963, 1.7215, 0.027096758,
      0.0679936, 0.671259, 0.13218091, 0.06181431, 0, 0, 0, 1.0130951, 0.8868538, 0.048929866, 1.2660053, 1.567459,
      0.14503157, 0.6799508, 0, 0.1405914, 1.8638133, 0.74317193, 0.21360697, 0.2282606, 0, 0, 0.86992687, 0.031843156,
      0.06457784, 0.09362907, 0, 1.2580558, 0.048693996, 0.22308736, 0.61505884, 0.2407928, 1.3065242, 1.0841233,
      0.21956171, 0, 0, 0, 0.008441925, 0, 1.3093654, 0, 0, 0.16612592, 0.460509, 0, 0.006187692, 0.46659443,
      0.017560774, 0.09143091, 0.1835142, 0.0039212657, 0.050462082, 0.28139383, 0.664337, 0.053054653, 0, 0.3654794,
      0.5794932, 0.7786759, 0.09605156, 0.06274917, 0.23131193, 1.7957749, 0.027986243, 0.27420446, 0, 0.001654333, 0,
      0, 0, 0.95632124, 0, 0.14571634, 1.2078986, 0, 3.121053, 0.072842024, 0.105249286, 0.09261, 1.1679014, 0.85107493,
      0, 0, 0.33763364, 0.0010664414, 1.4281853, 0, 1.495283, 0, 0.4118839, 0, 0.53115207, 1.0735215, 0, 0.070034735,
      0.69573677, 0.28058895, 0.20777188, 0.23404673, 1.101336, 0, 0, 0, 0.707311, 0.27192092, 0.00509084, 0.4402631,
      0.050765757, 0.47748908, 0.013058614, 0, 0, 0.8414718, 0.3192647, 0.23153986, 0.7955528, 0.1115208, 0, 0.30128253,
      0.013542691, 0.033149194, 0, 1.6288855, 0.44236866, 0, 0.011877556, 0.0467402, 0, 1.8654546, 0, 0.43070313,
      1.1172296, 0.010119847, 0.055735376, 0.11100398, 0.0044009346, 0, 0.0049855076, 0.18739451, 0, 0.010563656,
      0.13111714, 0.16698235, 0.43299305, 0, 0.050271064, 0.39871252, 0.15801644, 0.7387133, 0.008554634, 0.22189677, 0,
      0.18349522, 0.39394823, 0.5140435, 0.703666, 0.20023435, 0.6495079, 0.20538867, 0, 0.007160245, 0.7873917,
      0.033310276, 0, 0.3562285, 0.29434907, 0.45787364, 0, 1.0103179, 0.0400199, 0, 0.0045012943, 0.5094998,
      0.09060231, 0, 0.06786016, 3.244331, 0.0030350685, 0.0056400783, 0.29082328, 0.3957587, 0.017425518, 0.03543666,
      0.034658812, 0.4603353, 0, 0.6003319, 0.47171697, 0, 1.6241578, 0.02909637, 0.054002274, 0, 0.13256514,
      0.16816752, 0, 0.03535374, 0, 1.266546, 0, 0, 0.71434045, 1.2053913, 0.6076128, 0.34499243, 0, 0.02296618,
      0.35767552, 0.123933926, 0.07937966, 0, 0.028809635, 0, 0.015466262, 0.6478449, 0, 0.15063621, 2.0435793,
      0.16694458, 0, 0.7061615, 1.6477422, 0.007697777, 0, 0, 0.46156785, 0, 0, 0.07744055, 0, 0.66628283, 0,
      0.058040094, 0, 0.122766316, 0, 0.3940448, 0.39562732, 0, 1.893806, 0.054009438, 0, 0.078982055, 0.31995434,
      0.30744758, 0.47049138, 0.17232291, 2.3330824, 0.7537448, 0.022950571, 1.1946496, 0.099043146, 0, 0.7871672,
      0.064919114, 0.34432122, 0.14448921, 0.09487388, 0.3374638, 0.0063212747, 0, 0, 0.052776366, 1.269138, 0,
      0.25483155, 0, 0.05886116, 0.030202145, 0, 1.4469278, 0, 0.03503663, 0, 0, 2.421089, 0.25540477, 0.10503078,
      1.1043905, 0.8252376, 0, 0.15804374, 0.061345227, 0.9225959, 0, 0.011647371, 0.18150201, 1.2639235, 0.23696214, 0,
      0, 0.25718763, 1.1674283, 1.3090968, 0, 0, 0, 0, 0.0029431072, 0.4201787, 0.43963817, 0, 0.49731278, 0, 0,
      0.03863436, 2.9363892, 0.059149742, 1.6398594, 0, 0.0024883894, 0.54894066, 0.006344552, 1.4789625, 0,
      0.050215963, 0, 0.62224084, 0.10143045, 1.2604109, 0.01593613, 0.29506955, 0.21014704, 1.3173137, 0.026144864,
      1.2781795, 1.049222, 0.17873326, 0.0620631, 0.09010681, 0.12691061, 0.7513367, 0.26290852, 0, 0.05017157,
      0.24752179, 0.15833941, 1.0974536, 0.008375402, 0, 1.2344285, 0.5998373, 1.1848468, 1.4052901, 0.0044037467,
      0.00018889563, 1.7939517, 0, 0, 0.012612284, 0.019884294, 0.4016843, 0.16096327, 0, 0.145599, 2.1743786,
      0.02238226, 0.075258665, 0, 0, 0.026292022, 0.8936992, 0.06417302, 0.032127645, 0.36071965, 0.56498766, 0.4648986,
      0.00160409, 0.23105633, 0, 0, 0.0050939443, 0.29425153, 0.07761866, 0.0043180524, 0, 0, 0.32596856, 0.060365967,
      0.034153208, 0, 0.13400948, 0.03973009, 0, 0, 3.6538086, 0.3512497, 0.18166694, 0.23019384, 0.016613532,
      0.04150206, 0.52147144, 0.4569628, 0.29168093, 0.2580165, 0.50116324, 0, 0.013237496, 0.123573884, 0.9160997,
      0.03674584, 0, 0, 0.007508521, 0.66330034, 0, 0.010735619, 0, 0, 0.056931466, 0.3829866, 0.020333163, 0.66725343,
      0.27098608, 0.25521734, 0.11252522, 1.3586938, 0.6029858, 0.90273887, 0.9485183, 2.7802308, 0, 1.8740951, 0,
      0.15656635, 0, 0, 0.0685234, 1.1935343, 0.017394172, 1.6460009, 0.39089075, 0.160232, 0.00050840573, 0.661735, 0,
      0.11731987, 0.027295405, 0, 0.059184358, 0.6213139, 0, 0.39734316, 0, 0.316165, 0, 0.116437495, 0.8292312,
      0.5353816, 0, 0.20144793, 0, 0.15292776, 0, 0.61955225, 0, 0.22244512, 0.15251409, 0.60449755, 0, 0, 0.20695803,
      0.0852824, 0, 0, 0.3000411, 3.2258034, 0.02921699, 0.18274385, 0.02733763, 0.36455807, 0.14199452, 0.30521446, 0,
      0.048995513, 0.55748516, 0.17067902, 0, 0.3864577, 1.1515371, 0, 0.74839276, 0, 0, 1.783636, 0.49731734,
      0.6639767, 0.03494248, 0, 0.36539066, 0.035125606, 0.014299237, 0, 0, 0, 3.147654, 0.17907465, 0, 0.12665813, 0,
      0.040404543, 0.60314786, 0, 1.342283, 0, 0, 0, 2.2245424, 0.09206447, 0, 0, 0, 0, 0, 0.25021732, 0.46143535,
      0.76134413, 1.090647, 0.3993872, 0.38462153, 0.02441527, 0, 0.5025831, 0.15328975, 0.24064781, 1.862208, 0, 0, 0,
      0.3685042, 0.26333678, 0, 0.016390167, 0.034210175, 1.6460714, 0, 0, 0, 0.14604002, 0, 0.69406503, 0, 0,
      0.5364989, 1.0345024, 0, 0, 0.8368006, 0.16305012, 0, 0.1088241, 0.5226471, 0.11557671, 0.43566668, 0, 0.18307693,
      0.00031718428, 0.4663337, 0.09495404, 0.9629151, 0.006782376, 0.0904324, 0.03900202, 2.8037834, 0.0121683,
      0.5701221, 0, 0, 0.68768466, 0.0017490971, 0.16939244, 0.079277426, 0.027017662, 0.9533852, 0.012276358,
      1.2300559, 0, 0.04892433, 0, 0.31517375, 0, 0.033021685, 0.3268939, 1.0634732, 0, 2.1371808, 0.14136621, 0, 0,
      0.23099245, 0.04723945, 0.2015422, 0.38335893, 0.15847328, 0, 0.038456935, 0, 0.02820052, 0.17754072, 0.54956913,
      0.40818334, 1.008577, 0, 0.065981105, 0.17994143, 0.0112759145, 0, 0.00997191, 1.7191218, 0, 0, 1.8046016,
      0.1842095, 0.024195837, 0.04273478, 0, 0.017592343, 0, 0.27228767, 0.032883517, 0, 0.0013816989, 0, 0.48770258,
      0.03338559, 0, 0.13355629, 0.8893161, 0.0015319707, 0.04432179, 0.067252345, 0, 1.0522368, 0.03272758, 0.7818206,
      0.3245768, 0.004283107, 0.29573596, 0.53628266, 0.37151006, 0.6629507, 0.4980429, 0.04385131, 0.08012825,
      1.7355218, 0.19765721, 0, 0, 0, 0.019869016, 0.6996365, 0.00076653034, 1.0036968, 0.85480475, 0, 0.033317674,
      0.5030378, 0, 0.11091337, 0.26323697, 0, 0, 1.301492, 0.48748517, 0.22890021, 0.09736752, 0.26941195, 0.39909944,
      0.78687596, 0, 0.008960627, 0.2664043, 0.044848803, 1.9081019, 0.1284604, 0.23867834, 0.03899221, 0.37771618,
      0.2635595, 0.010485075, 0.030040907, 1.211372, 0.6062866, 0.17654768, 0, 0.041046854, 0.32672572, 0, 0.04012,
      0.022970531, 1.9466101, 0.58857137, 0.121158004, 0.020687891, 0.36119813, 2.813717, 0.05900712, 0, 0.45417324,
      0.40493503, 0.23735613, 1.3346361, 0, 1.1870238, 0.12683776, 0.02002713, 0.004387252, 0, 0, 0.049324844,
      0.38416696, 0, 0, 0, 0.07010632, 0, 0.06850913, 1.7806956, 0.11927731, 0, 0.07296396, 0, 0.1578657, 0.0038777858,
      0.35031992, 0, 0.00819142, 0, 0.5048882, 0, 0.36482012, 0.028708117, 0.041826237, 1.2606195, 0, 1.3475384, 0, 0,
      0, 0.90085495, 1.3233951, 0.3523422, 0.16905524, 0.14790413, 0, 0.6152573, 0.008410036, 0, 0, 0.23666444, 0,
      0.010775537, 1.1147317, 0.6919347, 0, 0.24543144, 0.87207943, 0, 0, 0.16167742, 0.07432422, 0, 0.524699,
      0.08982382, 0, 0.077841915, 0.008160095, 0.09567988, 0.010892956, 1.3402, 0.18093899, 0.6694807, 0, 0.15386586,
      0.6778418, 0, 0, 0.031485207, 0.06418216, 0.014477837, 0.11794529, 0, 1.0111548, 0.4081734, 0, 0, 0.475326,
      0.002389431, 0.03761672, 0, 0, 0.681373, 0.04219096, 0.033113897, 0, 0, 0.22731559, 0.29108244, 0.32412976,
      0.17965977, 1.7093197, 0.28488183, 0.55355877, 0.001107936, 0, 0.26119283, 1.2629124, 0.24686621, 0.4477731, 0, 0,
      0.020437397, 0, 0.0047490643, 0.15131122, 0, 1.147693, 0, 0, 1.8479815, 0.01905308, 0, 0.24237864, 1.1651623,
      0.07709413, 0.6182829, 0, 0.022982081, 0.0660896, 0.036397494, 0.9182171, 0.114381336, 0.7410228, 0.6065488, 0,
      0.26247194, 0.33914706, 0.018343681, 0.4235914, 0.107359834, 1.4569778, 0, 0.016011374, 0, 0, 0, 0.032574214, 0,
      0.0069448412, 0.32668927, 0, 0.052599974, 0.006275985, 1.2833257, 0.10854751, 0.018778928, 0.06656346,
      0.017552182, 0.035561036, 0.026216652, 1.9463884, 0.042523257, 1.8678879, 0.0037025334, 1.7904012, 0.053377375,
      0.23726374, 0.03344773, 0.44914237, 0.09121002, 0.09145105, 0, 0.19282235, 0.013855691, 0.3563681, 0.5104415,
      0.074059606, 0.86305857, 0, 0, 0.48047006, 0, 1.0241042, 0.19836453, 0.8952739, 0, 0.025460126, 0.08312414, 0,
      2.6871147, 0.3440403, 0, 0.034895808, 0.06850605, 0.49305367, 0.29627186, 0, 0.066132225, 2.7195218, 0,
      0.014678527, 1.2118641, 0, 0.25256577, 0.3308711, 0, 0.009727964, 0, 0, 0.57810754, 0, 0.055213917, 0.80954915, 0,
      0.095775, 0.0427145, 0.69445723, 0.022930797, 0.49201965, 0.27698636, 0, 0.39205664, 0.01598761, 0.15108094, 0, 0,
      0, 0.31993836, 0, 0.07465802, 0.05502545, 0.11426922, 0.5920659, 0.95570725, 1.0155783, 0.0032274674, 0.59210736,
      0.5438598, 0.00082625175, 0.34625283, 0.00043204366, 0.02654636, 0.86308014, 0.3794675, 0.0015980856, 0,
      1.1324202, 0, 0.21432045, 0.024733495, 0.35856324, 0, 0.13016625, 1.0008297, 0, 0.97475415, 0.22588341,
      0.0037524262, 0.08630235, 0.66897625, 0.11211763, 0, 0.07564129, 0.090918764, 0.4224459, 0.3215933, 0.70065385,
      3.8349283, 1.3120651, 0.89982545, 0.053981304, 0.7232579, 0.06996504, 0, 0, 0.009366989, 0, 0, 0, 0, 0.9286245, 0,
      0.02447071, 0.016769165, 0, 0, 0.019673921, 0.022393372, 0, 0.09373257, 0, 0.022557696, 1.9859706]]



def load_sparse_matrix():
    conn = MongoClient(host='192.168.1.242', port=27017)

    db = conn['vectors']
    coll = db['vecs']
    n_dims = 1280
    count =0

    these_preds =[]
    id_parts = []
    for doc in coll.find():
        doc_vec=doc["vec_part"]
        len_vec = len(doc_vec)
        id_part = [doc["id_part"] for i in range(len_vec)]

        id_parts = id_parts + id_part

        count = count + len_vec
        #these_preds =these_preds+doc_vec
        flat_list = [item for sublist in doc_vec for item in sublist]
        these_preds=these_preds+flat_list

    preds = sp.lil_matrix((count, n_dims))
    these_preds = np.array(these_preds)
    shp = (count, n_dims)

    preds[:,:] = these_preds.reshape(shp)

    x_coo = preds.tocoo()
    row = x_coo.row
    col = x_coo.col
    data = x_coo.data
    shape = x_coo.shape

    z = sp.coo_matrix((data, (row, col)), shape=shape)


    return z,id_parts


def load_predictor(vec):
    vec = np.array(vec)

    vecs,id_parts = load_sparse_matrix()

    knn = NearestNeighbors(metric='cosine', algorithm='brute')
    knn.fit(vecs)

    dist, indices = knn.kneighbors(vec.reshape(1, -1), n_neighbors=5)
    dist, indices = dist.flatten(), indices.flatten()

    # def similarity(n_neighbors=20):
    # return _similar(vec, knn, filenames, n_neighbors)
    #return [(id_parts[indices[i]]) for i in range(len(indices))]
    return Counter([(id_parts[indices[i]]) for i in range(len(indices))]).most_common(2)

# result= load_predictor(a)
# print(result)
# print(result[0][0])
